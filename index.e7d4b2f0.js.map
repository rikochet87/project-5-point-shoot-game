{"mappings":"kpBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,8I,MCAzDC,EAAiB,IAAAC,IAAoBL,EAAA,SAAAM,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,W,MCA5FC,EAAiB,IAAAN,IAAoBL,EAAA,SAAAM,QAA6C,SAAQC,OAAAC,KAAAC,KAAEC,WCI5F,MAAME,EAASC,SAASC,eAAe,WACjCC,EAAMH,EAAOI,WAAW,MAC9BJ,EAAOK,MAAQC,OAAOC,WACtBP,EAAOQ,OAASF,OAAOG,YACvB,MAAMC,EAAkBT,SAASC,eAAe,mBAC1CS,EAAeD,EAAgBN,WAAW,MAChDM,EAAgBL,MAAQC,OAAOC,WAC/BG,EAAgBF,OAASF,OAAOG,YAEhC,IAAIG,EAAQ,EACRC,GAAW,EACfV,EAAIW,KAAO,cAEX,IAAIC,EAAkB,EAElBC,EAAW,EAEXC,EAAS,GAEb,SAASC,EAAYC,GACnB,MAAMC,EAAQ,IAAIC,MAElB,OADAD,EAAME,IAAMH,EACLC,C,CAGT,IAAIG,EAAcL,EAAYM,EAAAhC,IAC1BiC,EAAYP,EAAYM,EAAAzB,IAE5B,MAAM2B,EACJC,cACEC,KAAKC,YAAc,IACnBD,KAAKE,aAAe,IACpBF,KAAKG,aAA+B,GAAhBC,KAAKC,SAAiB,GAC1CL,KAAKvB,MAAQuB,KAAKC,YAAcD,KAAKG,aACrCH,KAAKpB,OAASoB,KAAKE,aAAeF,KAAKG,aACvCH,KAAKM,EAAIlC,EAAOK,MAChBuB,KAAKO,EAAIH,KAAKC,UAAYjC,EAAOQ,OAASoB,KAAKpB,QAC/CoB,KAAKQ,WAA6B,EAAhBJ,KAAKC,SAAe,EACtCL,KAAKS,WAA6B,EAAhBL,KAAKC,SAAe,IACtCL,KAAKU,mBAAoB,EACzBV,KAAKW,MAAQ,EACbX,KAAKY,SAAW,EAChBZ,KAAKa,cAAgB,EACrBb,KAAKc,aAA+B,GAAhBV,KAAKC,SAAgB,GACzCL,KAAKe,aAAe,CAClBX,KAAKY,MAAsB,IAAhBZ,KAAKC,UAChBD,KAAKY,MAAsB,IAAhBZ,KAAKC,UAChBD,KAAKY,MAAsB,IAAhBZ,KAAKC,WAElBL,KAAKiB,MACH,OACAjB,KAAKe,aAAa,GAClB,IACAf,KAAKe,aAAa,GAClB,IACAf,KAAKe,aAAa,GAClB,IACFf,KAAKkB,SAAWd,KAAKC,SAAW,E,CAElCc,OAAOC,GAQL,IAPIpB,KAAKO,EAAI,GAAKP,KAAKO,EAAInC,EAAOQ,OAASoB,KAAKpB,UAC9CoB,KAAKS,YAA+B,EAAlBT,KAAKS,YAEzBT,KAAKM,GAAKN,KAAKQ,WACfR,KAAKO,GAAKP,KAAKS,WACXT,KAAKM,EAAI,EAAIN,KAAKvB,QAAOuB,KAAKU,mBAAoB,GACtDV,KAAKa,eAAiBO,EAClBpB,KAAKa,cAAgBb,KAAKc,eACxBd,KAAKW,MAAQX,KAAKY,SAAUZ,KAAKW,MAAQ,EACxCX,KAAKW,QACVX,KAAKa,cAAgB,EACjBb,KAAKkB,UACP,IAAI,IAAI/D,EAAI,EAAGA,EAAI,EAAGA,IACpBkE,EAAUC,KAAK,IAAIC,EAASvB,KAAKM,EAAGN,KAAKO,EAAGP,KAAKvB,MAAOuB,KAAKiB,QAI/DjB,KAAKM,EAAI,EAAIN,KAAKvB,QAAOQ,GAAW,E,CAE1CuC,OACEzC,EAAa0C,UAAYzB,KAAKiB,MAC9BlC,EAAa2C,SAAS1B,KAAKM,EAAGN,KAAKO,EAAGP,KAAKvB,MAAOuB,KAAKpB,QACvDL,EAAIoD,UACFhC,EACAK,KAAKW,MAAQX,KAAKC,YAClB,EACAD,KAAKC,YACLD,KAAKE,aACLF,KAAKM,EACLN,KAAKO,EACLP,KAAKvB,MACLuB,KAAKpB,O,EAKX,IAAIgD,EAAa,GAEjB,MAAMC,EACJ9B,YAAYO,EAAGC,EAAGuB,GAChB9B,KAAKR,MAAQK,EACbG,KAAKC,YAAc,IACnBD,KAAKE,aAAe,IACpBF,KAAK8B,KAAOA,EACZ9B,KAAKM,EAAIA,EACTN,KAAKO,EAAIA,EACTP,KAAKW,MAAQ,EACbX,KAAK+B,MAAQ,IAAIC,MACjBhC,KAAK+B,MAAMrC,IAAM,oBACjBM,KAAKiC,mBAAqB,EAC1BjC,KAAKkC,cAAgB,IACrBlC,KAAKU,mBAAoB,C,CAE3BS,OAAOC,GACc,IAAfpB,KAAKW,OAAaX,KAAK+B,MAAMI,OACjCnC,KAAKiC,oBAAsBb,EACvBpB,KAAKiC,mBAAqBjC,KAAKkC,gBACjClC,KAAKW,QACLX,KAAKiC,mBAAqB,EACtBjC,KAAKW,MAAQ,IAAGX,KAAKU,mBAAoB,G,CAGjDc,OACEjD,EAAIoD,UACF3B,KAAKR,MACLQ,KAAKW,MAAQX,KAAKC,YAClB,EACAD,KAAKC,YACLD,KAAKE,aACLF,KAAKM,EACLN,KAAKO,EAAIP,KAAK8B,KAAO,EACrB9B,KAAK8B,KACL9B,KAAK8B,K,EAKX,IAAIT,EAAY,GAEhB,MAAME,EACJxB,YAAYO,EAAGC,EAAGuB,EAAMb,GACtBjB,KAAK8B,KAAOA,EACZ9B,KAAKM,EAAIA,EAAIN,KAAK8B,KAAO,EACzB9B,KAAKO,EAAIA,EAAIP,KAAK8B,KAAO,EACzB9B,KAAKoC,OAAShC,KAAMC,SAAWL,KAAK8B,KAAQ,GAC5C9B,KAAKqC,UAA4B,GAAhBjC,KAAKC,SAAgB,GACtCL,KAAKU,mBAAoB,EACzBV,KAAKsC,OAAyB,EAAhBlC,KAAKC,SAAe,GAClCL,KAAKiB,MAAQA,C,CAEfE,SACEnB,KAAKM,GAAKN,KAAKsC,OACftC,KAAKoC,QAAU,GACXpC,KAAKoC,OAASpC,KAAKqC,UAAY,IAAGrC,KAAKU,mBAAoB,E,CAEjEc,OACEjD,EAAIgE,OACJhE,EAAIiE,YAAc,EAAIxC,KAAKoC,OAAOpC,KAAKqC,UACvC9D,EAAIkE,YACJlE,EAAIkD,UAAYzB,KAAKiB,MACrB1C,EAAImE,IAAI1C,KAAKM,EAAGN,KAAKO,EAAGP,KAAKoC,OAAQ,EAAa,EAAVhC,KAAKuC,IAC7CpE,EAAIqE,OACJrE,EAAIsE,S,EA2BRC,iBAAiB,SAAS,SAAUC,GAClC,MAAMC,EAAqBjE,EAAakE,aAAaF,EAAEzC,EAAGyC,EAAExC,EAAG,EAAG,GAClE2C,QAAQC,IAAIH,GACZ,MAAMI,EAAKJ,EAAmBK,KAC9BhE,EAAOiE,SAASC,IAEZA,EAAOxC,aAAa,KAAOqC,EAAG,IAC9BG,EAAOxC,aAAa,KAAOqC,EAAG,IAC9BG,EAAOxC,aAAa,KAAOqC,EAAG,KAG9BG,EAAO7C,mBAAoB,EAC3B1B,IACA4C,EAAWN,KAAK,IAAIO,EAAU0B,EAAOjD,EAAGiD,EAAOhD,EAAGgD,EAAO9E,QACzDyE,QAAQC,IAAIvB,G,OAKlB,SAAS4B,EAAQC,GACflF,EAAImF,UAAU,EAAG,EAAGtF,EAAOK,MAAOL,EAAOQ,QACzCG,EAAa2E,UAAU,EAAG,EAAGtF,EAAOK,MAAOL,EAAOQ,QAClD,IAAIwC,EAAYqC,EAAYrE,EAC5BA,EAAWqE,EACXtE,GAAmBiC,EACfjC,EAxMc,MAyMhBE,EAAOiC,KAAK,IAAIxB,GAChBX,EAAkB,EAClBE,EAAOsE,MAAK,SAAUC,EAAGC,GACvB,OAAOD,EAAEnF,MAAQoF,EAAEpF,K,KAnDvBF,EAAIkD,UAAY,QAChBlD,EAAIuF,SAAS,UAAY9E,EAAO,GAAI,IACpCT,EAAIkD,UAAY,QAChBlD,EAAIuF,SAAS,UAAY9E,EAAO,GAAI,IAoDpC,IAAIqC,KAAchC,KAAWuC,GAAY0B,SAASC,GAChDA,EAAOpC,OAAOC,KAEhB,IAAIC,KAAchC,KAAWuC,GAAY0B,SAASC,GAAWA,EAAO/B,SACpEnC,EAASA,EAAO0E,QAAQR,IAAYA,EAAO7C,oBAC3CkB,EAAaA,EAAWmC,QAAQR,IAAYA,EAAO7C,oBACnDW,EAAYA,EAAU0C,QAAQR,IAAYA,EAAO7C,oBAE5CzB,GAxDLV,EAAIyF,UAAY,SAChBzF,EAAIkD,UAAY,QAChBlD,EAAIuF,SACF,4BAA8B9E,EAC9BZ,EAAOK,MAAQ,EACfL,EAAOQ,OAAS,GAElBL,EAAIkD,UAAY,QAChBlD,EAAIuF,SACF,4BAA8B9E,EAC9BZ,EAAOK,MAAQ,EAAI,EACnBL,EAAOQ,OAAS,EAAI,IA6CPqF,sBAAsBT,E,CAGvCA,CAAQ","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-e854b4dce8ef2de9.js","node_modules/@parcel/runtime-js/lib/runtime-207ea19260576eb3.js","node_modules/@parcel/runtime-js/lib/runtime-a9334dff7814e8d2.js","src/index.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"7GeUN\\\":\\\"index.e7d4b2f0.js\\\",\\\"hfyJ9\\\":\\\"raven.5e1e12d9.png\\\",\\\"jE0tl\\\":\\\"boom.054127e7.png\\\"}\"));","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"hfyJ9\")).toString();","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"jE0tl\")).toString();","/**@type {HTMLCanvasElement}*/\r\nimport img1 from \"../img/raven.png\";\r\nimport img2 from \"../img/boom.png\";\r\n\r\nconst canvas = document.getElementById(\"canvas1\");\r\nconst ctx = canvas.getContext(\"2d\");\r\ncanvas.width = window.innerWidth;\r\ncanvas.height = window.innerHeight;\r\nconst collisionCanvas = document.getElementById(\"collisionCanvas\");\r\nconst collisionCtx = collisionCanvas.getContext(\"2d\");\r\ncollisionCanvas.width = window.innerWidth;\r\ncollisionCanvas.height = window.innerHeight;\r\n\r\nlet score = 0;\r\nlet gameOver = false;\r\nctx.font = \"50px Impact\";\r\n\r\nlet timeToNextRaven = 0;\r\nlet ravenInterval = 500;\r\nlet lastTime = 0;\r\n\r\nlet ravens = [];\r\n\r\nfunction createImage(imageSrc) {\r\n  const image = new Image();\r\n  image.src = imageSrc;\r\n  return image;\r\n}\r\n\r\nlet ravensImage = createImage(img1);\r\nlet boomImage = createImage(img2);\r\n\r\nclass Raven {\r\n  constructor() {\r\n    this.spriteWidth = 271;\r\n    this.spriteHeight = 194;\r\n    this.sizeModifier = Math.random() * 0.6 + 0.4;\r\n    this.width = this.spriteWidth * this.sizeModifier;\r\n    this.height = this.spriteHeight * this.sizeModifier;\r\n    this.x = canvas.width;\r\n    this.y = Math.random() * (canvas.height - this.height);\r\n    this.directionX = Math.random() * 5 + 3;\r\n    this.directionY = Math.random() * 5 - 2.5;\r\n    this.markedForDeletion = false;\r\n    this.frame = 0;\r\n    this.maxFrame = 4;\r\n    this.timeSinceFlap = 0;\r\n    this.flapInterval = Math.random() * 50 + 50;\r\n    this.randomColors = [\r\n      Math.floor(Math.random() * 255),\r\n      Math.floor(Math.random() * 255),\r\n      Math.floor(Math.random() * 255),\r\n    ];\r\n    this.color =\r\n      \"rgb(\" +\r\n      this.randomColors[0] +\r\n      \",\" +\r\n      this.randomColors[1] +\r\n      \",\" +\r\n      this.randomColors[2] +\r\n      \")\";\r\n    this.hasTrail = Math.random() > 0.5;\r\n  }\r\n  update(deltaTime) {\r\n    if (this.y < 0 || this.y > canvas.height - this.height) {\r\n      this.directionY = this.directionY * -1;\r\n    }\r\n    this.x -= this.directionX;\r\n    this.y += this.directionY;\r\n    if (this.x < 0 - this.width) this.markedForDeletion = true;\r\n    this.timeSinceFlap += deltaTime;\r\n    if (this.timeSinceFlap > this.flapInterval) {\r\n      if (this.frame > this.maxFrame) this.frame = 0;\r\n      else this.frame++;\r\n      this.timeSinceFlap = 0;\r\n      if (this.hasTrail) {\r\n        for(let i = 0; i < 5; i++){\r\n          particles.push(new Particle(this.x, this.y, this.width, this.color));\r\n        }\r\n      }\r\n    }\r\n    if (this.x < 0 - this.width) gameOver = true;\r\n  }\r\n  draw() {\r\n    collisionCtx.fillStyle = this.color;\r\n    collisionCtx.fillRect(this.x, this.y, this.width, this.height);\r\n    ctx.drawImage(\r\n      ravensImage,\r\n      this.frame * this.spriteWidth,\r\n      0,\r\n      this.spriteWidth,\r\n      this.spriteHeight,\r\n      this.x,\r\n      this.y,\r\n      this.width,\r\n      this.height\r\n    );\r\n  }\r\n}\r\n\r\nlet explosions = [];\r\n\r\nclass Explosion {\r\n  constructor(x, y, size) {\r\n    this.image = boomImage;\r\n    this.spriteWidth = 200;\r\n    this.spriteHeight = 179;\r\n    this.size = size;\r\n    this.x = x;\r\n    this.y = y;\r\n    this.frame = 0;\r\n    this.sound = new Audio();\r\n    this.sound.src = \"../sound/boom.mp3\";\r\n    this.timeSinceLastFrame = 0;\r\n    this.frameInterval = 250;\r\n    this.markedForDeletion = false;\r\n  }\r\n  update(deltaTime) {\r\n    if (this.frame === 0) this.sound.play();\r\n    this.timeSinceLastFrame += deltaTime;\r\n    if (this.timeSinceLastFrame > this.frameInterval) {\r\n      this.frame++;\r\n      this.timeSinceLastFrame = 0;\r\n      if (this.frame > 5) this.markedForDeletion = true;\r\n    }\r\n  }\r\n  draw() {\r\n    ctx.drawImage(\r\n      this.image,\r\n      this.frame * this.spriteWidth,\r\n      0,\r\n      this.spriteWidth,\r\n      this.spriteHeight,\r\n      this.x,\r\n      this.y - this.size / 4,\r\n      this.size,\r\n      this.size\r\n    );\r\n  }\r\n}\r\n\r\nlet particles = [];\r\n\r\nclass Particle {\r\n  constructor(x, y, size, color) {\r\n    this.size = size;\r\n    this.x = x + this.size / 2;\r\n    this.y = y + this.size / 3;\r\n    this.radius = (Math.random() * this.size) / 10;\r\n    this.maxRadius = Math.random() * 20 + 35;\r\n    this.markedForDeletion = false;\r\n    this.speedX = Math.random() * 1 + 0.5;\r\n    this.color = color;\r\n  }\r\n  update() {\r\n    this.x += this.speedX;\r\n    this.radius += 0.5;\r\n    if (this.radius > this.maxRadius - 5) this.markedForDeletion = true;\r\n  }\r\n  draw() {\r\n    ctx.save();\r\n    ctx.globalAlpha = 1 - this.radius/this.maxRadius\r\n    ctx.beginPath();\r\n    ctx.fillStyle = this.color;\r\n    ctx.arc(this.x, this.y, this.radius, 0, Math.PI * 2);\r\n    ctx.fill();\r\n    ctx.restore();\r\n  }\r\n}\r\n\r\nfunction drawScore() {\r\n  ctx.fillStyle = \"black\";\r\n  ctx.fillText(\"Score: \" + score, 50, 75);\r\n  ctx.fillStyle = \"white\";\r\n  ctx.fillText(\"Score: \" + score, 55, 80);\r\n}\r\n\r\nfunction drawGameOver() {\r\n  ctx.textAlign = \"center\";\r\n  ctx.fillStyle = \"black\";\r\n  ctx.fillText(\r\n    \"GAME OVER, your score is \" + score,\r\n    canvas.width / 2,\r\n    canvas.height / 2\r\n  );\r\n  ctx.fillStyle = \"white\";\r\n  ctx.fillText(\r\n    \"GAME OVER, your score is \" + score,\r\n    canvas.width / 2 + 5,\r\n    canvas.height / 2 + 5\r\n  );\r\n}\r\n\r\naddEventListener(\"click\", function (e) {\r\n  const detectedPixelColor = collisionCtx.getImageData(e.x, e.y, 1, 1);\r\n  console.log(detectedPixelColor);\r\n  const pc = detectedPixelColor.data;\r\n  ravens.forEach((object) => {\r\n    if (\r\n      object.randomColors[0] === pc[0] &&\r\n      object.randomColors[1] === pc[1] &&\r\n      object.randomColors[2] === pc[2]\r\n    ) {\r\n      // collision detected\r\n      object.markedForDeletion = true;\r\n      score++;\r\n      explosions.push(new Explosion(object.x, object.y, object.width));\r\n      console.log(explosions);\r\n    }\r\n  });\r\n});\r\n\r\nfunction animate(timestamp) {\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  collisionCtx.clearRect(0, 0, canvas.width, canvas.height);\r\n  let deltaTime = timestamp - lastTime;\r\n  lastTime = timestamp;\r\n  timeToNextRaven += deltaTime;\r\n  if (timeToNextRaven > ravenInterval) {\r\n    ravens.push(new Raven());\r\n    timeToNextRaven = 0;\r\n    ravens.sort(function (a, b) {\r\n      return a.width - b.width;\r\n    });\r\n  }\r\n  drawScore();\r\n  [...particles, ...ravens, ...explosions].forEach((object) =>\r\n    object.update(deltaTime)\r\n  );\r\n  [...particles, ...ravens, ...explosions].forEach((object) => object.draw());\r\n  ravens = ravens.filter((object) => !object.markedForDeletion);\r\n  explosions = explosions.filter((object) => !object.markedForDeletion);\r\n  particles = particles.filter((object) => !object.markedForDeletion);\r\n\r\n  if (!gameOver) requestAnimationFrame(animate);\r\n  else drawGameOver();\r\n}\r\nanimate(0);\r\n"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$64a76f02057e2064$exports","URL","resolve","import","meta","url","toString","$2f994f33992b5686$exports","$35da740d59af89ba$var$canvas","document","getElementById","$35da740d59af89ba$var$ctx","getContext","width","window","innerWidth","height","innerHeight","$35da740d59af89ba$var$collisionCanvas","$35da740d59af89ba$var$collisionCtx","$35da740d59af89ba$var$score","$35da740d59af89ba$var$gameOver","font","$35da740d59af89ba$var$timeToNextRaven","$35da740d59af89ba$var$lastTime","$35da740d59af89ba$var$ravens","$35da740d59af89ba$var$createImage","imageSrc","image","Image","src","$35da740d59af89ba$var$ravensImage","$parcel$interopDefault","$35da740d59af89ba$var$boomImage","$35da740d59af89ba$var$Raven","constructor","this","spriteWidth","spriteHeight","sizeModifier","Math","random","x","y","directionX","directionY","markedForDeletion","frame","maxFrame","timeSinceFlap","flapInterval","randomColors","floor","color","hasTrail","update","deltaTime","$35da740d59af89ba$var$particles","push","$35da740d59af89ba$var$Particle","draw","fillStyle","fillRect","drawImage","$35da740d59af89ba$var$explosions","$35da740d59af89ba$var$Explosion","size","sound","Audio","timeSinceLastFrame","frameInterval","play","radius","maxRadius","speedX","save","globalAlpha","beginPath","arc","PI","fill","restore","addEventListener","e","detectedPixelColor","getImageData","console","log","pc","data","forEach","object","$35da740d59af89ba$var$animate","timestamp","clearRect","sort","a","b","fillText","filter","textAlign","requestAnimationFrame"],"version":3,"file":"index.e7d4b2f0.js.map"}